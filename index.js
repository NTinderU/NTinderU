(()=>{var e={279:e=>{var n={kind:"Document",definitions:[{kind:"ScalarTypeDefinition",name:{kind:"Name",value:"Date"},directives:[]},{kind:"ObjectTypeDefinition",name:{kind:"Name",value:"User"},interfaces:[],directives:[],fields:[{kind:"FieldDefinition",name:{kind:"Name",value:"id"},arguments:[],type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"ID"}}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"username"},arguments:[],type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"password"},arguments:[],type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"liked"},arguments:[],type:{kind:"ListType",type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"matched"},arguments:[],type:{kind:"ListType",type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}}},directives:[]}]},{kind:"ObjectTypeDefinition",name:{kind:"Name",value:"Message"},interfaces:[],directives:[],fields:[{kind:"FieldDefinition",name:{kind:"Name",value:"id"},arguments:[],type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"ID"}}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"roomid"},arguments:[],type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"user"},arguments:[],type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"body"},arguments:[],type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"timestamp"},arguments:[],type:{kind:"NamedType",name:{kind:"Name",value:"Date"}},directives:[]}]},{kind:"ObjectTypeDefinition",name:{kind:"Name",value:"Chatroom"},interfaces:[],directives:[],fields:[{kind:"FieldDefinition",name:{kind:"Name",value:"id"},arguments:[],type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"ID"}}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"users"},arguments:[],type:{kind:"NonNullType",type:{kind:"ListType",type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"User"}}}}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"messages"},arguments:[],type:{kind:"NonNullType",type:{kind:"ListType",type:{kind:"NamedType",name:{kind:"Name",value:"Message"}}}},directives:[]}]},{kind:"ObjectTypeDefinition",name:{kind:"Name",value:"Query"},interfaces:[],directives:[],fields:[{kind:"FieldDefinition",description:{kind:"StringValue",value:"單個帳號",block:!1},name:{kind:"Name",value:"user"},arguments:[{kind:"InputValueDefinition",name:{kind:"Name",value:"username"},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},directives:[]}],type:{kind:"NamedType",name:{kind:"Name",value:"User"}},directives:[]},{kind:"FieldDefinition",description:{kind:"StringValue",value:"所有帳號名稱",block:!1},name:{kind:"Name",value:"users"},arguments:[],type:{kind:"NonNullType",type:{kind:"ListType",type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"User"}}}}},directives:[]},{kind:"FieldDefinition",description:{kind:"StringValue",value:"取得配對列表",block:!1},name:{kind:"Name",value:"match"},arguments:[{kind:"InputValueDefinition",name:{kind:"Name",value:"data"},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"MatchInput"}}},directives:[]}],type:{kind:"ListType",type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"User"}}}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"chatroom"},arguments:[{kind:"InputValueDefinition",name:{kind:"Name",value:"id"},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"ID"}}},directives:[]}],type:{kind:"NamedType",name:{kind:"Name",value:"Chatroom"}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"chatrooms"},arguments:[],type:{kind:"NonNullType",type:{kind:"ListType",type:{kind:"NamedType",name:{kind:"Name",value:"Chatroom"}}}},directives:[]}]},{kind:"ObjectTypeDefinition",name:{kind:"Name",value:"Mutation"},interfaces:[],directives:[],fields:[{kind:"FieldDefinition",description:{kind:"StringValue",value:"新增帳號",block:!1},name:{kind:"Name",value:"createUser"},arguments:[{kind:"InputValueDefinition",name:{kind:"Name",value:"data"},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"MutationInput"}}},directives:[]}],type:{kind:"NamedType",name:{kind:"Name",value:"User"}},directives:[]},{kind:"FieldDefinition",description:{kind:"StringValue",value:"刪除帳號",block:!1},name:{kind:"Name",value:"deleteUser"},arguments:[{kind:"InputValueDefinition",name:{kind:"Name",value:"data"},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"MutationInput"}}},directives:[]}],type:{kind:"NamedType",name:{kind:"Name",value:"User"}},directives:[]},{kind:"FieldDefinition",description:{kind:"StringValue",value:"(username)新增一個喜歡的對象(target)",block:!1},name:{kind:"Name",value:"addLikedUser"},arguments:[{kind:"InputValueDefinition",name:{kind:"Name",value:"data"},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"LikedInput"}}},directives:[]}],type:{kind:"NamedType",name:{kind:"Name",value:"User"}},directives:[]},{kind:"FieldDefinition",description:{kind:"StringValue",value:"(username)配對到一個新的對象(target)",block:!1},name:{kind:"Name",value:"addMatchedUser"},arguments:[{kind:"InputValueDefinition",name:{kind:"Name",value:"data"},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"LikedInput"}}},directives:[]}],type:{kind:"NamedType",name:{kind:"Name",value:"User"}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"createChatroom"},arguments:[{kind:"InputValueDefinition",name:{kind:"Name",value:"data"},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"chatroomMutationInput"}}},directives:[]}],type:{kind:"NamedType",name:{kind:"Name",value:"Chatroom"}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"createMessage"},arguments:[{kind:"InputValueDefinition",name:{kind:"Name",value:"id"},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"ID"}}},directives:[]},{kind:"InputValueDefinition",name:{kind:"Name",value:"data"},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"messageMutationInput"}}},directives:[]}],type:{kind:"NamedType",name:{kind:"Name",value:"Message"}},directives:[]}]},{kind:"InputObjectTypeDefinition",name:{kind:"Name",value:"MutationInput"},directives:[],fields:[{kind:"InputValueDefinition",name:{kind:"Name",value:"username"},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},directives:[]},{kind:"InputValueDefinition",name:{kind:"Name",value:"password"},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},directives:[]}]},{kind:"InputObjectTypeDefinition",name:{kind:"Name",value:"MatchInput"},directives:[],fields:[{kind:"InputValueDefinition",name:{kind:"Name",value:"username"},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},directives:[]},{kind:"InputValueDefinition",name:{kind:"Name",value:"max_count"},type:{kind:"NamedType",name:{kind:"Name",value:"Int"}},directives:[]}]},{kind:"InputObjectTypeDefinition",name:{kind:"Name",value:"LikedInput"},directives:[],fields:[{kind:"InputValueDefinition",name:{kind:"Name",value:"username"},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},directives:[]},{kind:"InputValueDefinition",name:{kind:"Name",value:"target"},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},directives:[]}]},{kind:"InputObjectTypeDefinition",name:{kind:"Name",value:"chatroomMutationInput"},directives:[],fields:[{kind:"InputValueDefinition",name:{kind:"Name",value:"users"},type:{kind:"NonNullType",type:{kind:"ListType",type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}}}},directives:[]}]},{kind:"InputObjectTypeDefinition",name:{kind:"Name",value:"messageMutationInput"},directives:[],fields:[{kind:"InputValueDefinition",name:{kind:"Name",value:"from"},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},directives:[]},{kind:"InputValueDefinition",name:{kind:"Name",value:"to"},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},directives:[]},{kind:"InputValueDefinition",name:{kind:"Name",value:"body"},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},directives:[]}]},{kind:"ObjectTypeDefinition",name:{kind:"Name",value:"Subscription"},interfaces:[],directives:[],fields:[{kind:"FieldDefinition",name:{kind:"Name",value:"message"},arguments:[{kind:"InputValueDefinition",name:{kind:"Name",value:"username"},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},directives:[]}],type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"MessageSubscriptionPayload"}}},directives:[]}]},{kind:"EnumTypeDefinition",name:{kind:"Name",value:"MutationType"},directives:[],values:[{kind:"EnumValueDefinition",name:{kind:"Name",value:"CREATED"},directives:[]},{kind:"EnumValueDefinition",name:{kind:"Name",value:"DELETED"},directives:[]}]},{kind:"ObjectTypeDefinition",name:{kind:"Name",value:"MessageSubscriptionPayload"},interfaces:[],directives:[],fields:[{kind:"FieldDefinition",name:{kind:"Name",value:"mutation"},arguments:[],type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"MutationType"}}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"data"},arguments:[],type:{kind:"NamedType",name:{kind:"Name",value:"Message"}},directives:[]}]}],loc:{start:0,end:1414}};n.loc.source={body:'scalar Date\r\n\r\ntype User {\r\n\tid: ID!\r\n\tusername: String!\r\n\tpassword: String!\r\n\tliked: [String!]\r\n\tmatched: [String!]\r\n}\r\n\r\ntype Message {\r\n\tid: ID!\r\n\troomid: String!\r\n\tuser: String!\r\n\tbody: String!\r\n\ttimestamp: Date\r\n}\r\n\r\ntype Chatroom {\r\n\tid: ID!\r\n\tusers: [User!]!\r\n\tmessages: [Message]!\r\n}\r\n\r\ntype Query {\r\n\t"單個帳號"\r\n\tuser(username: String!): User\r\n\t"所有帳號名稱"\r\n\tusers: [User!]!\r\n\t"取得配對列表"\r\n\tmatch(data: MatchInput!): [User!]\r\n\tchatroom(id: ID!): Chatroom\r\n\tchatrooms: [Chatroom]!\r\n}\r\n\r\ntype Mutation {\r\n\t"新增帳號"\r\n\tcreateUser(data: MutationInput!): User\r\n\t"刪除帳號"\r\n\tdeleteUser(data: MutationInput!): User\r\n\t"(username)新增一個喜歡的對象(target)"\r\n\taddLikedUser(data: LikedInput!): User\r\n\t"(username)配對到一個新的對象(target)"\r\n\taddMatchedUser(data: LikedInput!): User\r\n\tcreateChatroom(data: chatroomMutationInput!): Chatroom\r\n\tcreateMessage(id: ID!, data: messageMutationInput!): Message\r\n}\r\n\r\ninput MutationInput {\r\n\tusername: String!\r\n\tpassword: String!\r\n}\r\n\r\ninput MatchInput {\r\n\tusername: String!\r\n\tmax_count: Int\r\n}\r\n\r\ninput LikedInput {\r\n\tusername: String!\r\n\ttarget: String!\r\n}\r\n\r\ninput chatroomMutationInput {\r\n\tusers: [String!]!\r\n}\r\n\r\ninput messageMutationInput {\r\n\tfrom: String!\r\n\tto: String!\r\n\tbody: String!\r\n}\r\n\r\ntype Subscription {\r\n\tmessage(username: String!): MessageSubscriptionPayload!\r\n}\r\n\r\nenum MutationType {\r\n\tCREATED\r\n\tDELETED\r\n}\r\n\r\ntype MessageSubscriptionPayload {\r\n\tmutation: MutationType!\r\n\tdata: Message\r\n}\r\n',name:"GraphQL request",locationOffset:{line:1,column:1}},e.exports=n}},n={};function i(a){if(n[a])return n[a].exports;var t=n[a]={exports:{}};return e[a](t,t.exports,i),t.exports}i.n=e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return i.d(n,{a:n}),n},i.d=(e,n)=>{for(var a in n)i.o(n,a)&&!i.o(e,a)&&Object.defineProperty(e,a,{enumerable:!0,get:n[a]})},i.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),i.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},(()=>{"use strict";var e={};i.r(e);const n=require("dotenv-defaults");var a=i.n(n);const t=require("apollo-server-express"),d=require("mongoose");var r=i.n(d);const s=new d.Schema({username:{type:String,required:[!0,"Username field is required."]},password:{type:String,required:[!0,"Password field is required."]},liked:[String],matched:[String],rooms:{type:Map,of:String,required:[!1],default:[]}}),u=(0,d.model)("Users",s),m=new d.Schema({from:{type:String,required:[!0,"user field is required"]},to:{type:String,required:[!0,"user field is required."]},body:{type:String,required:[!0,"Body field is required."]},timestamp:{type:Date,default:Date.now}}),o=((0,d.model)("messages",m),new d.Schema({users:{type:[String],required:[!0,"users are required"]},messages:{type:[e.MessageSchema],required:[!1]}})),l=(0,d.model)("chatrooms",o),p=require("express");var k=i.n(p);const y={Query:{user:async(e,{username:n},{User:i})=>await i.findOne({username:n}),users:async(e,{},{User:n})=>{const i=await n.find().sort({username:1});for(var a of i)console.log(a);return i},chatroom:async(e,{id:n},{Chatroom:i})=>await i.findOne({_id:n}),chatrooms:async(e,{},{Chatroom:n})=>await n.find(),match:async(e,{data:{username:n,max_count:i}},{User:a})=>{const t={username:{$nin:(await a.findOne({username:n})).matched}},d={username:{$ne:n}};return((e,n)=>(n||(n=e.length),e.map((e=>({sort:Math.random(),value:e}))).sort(((e,n)=>e.sort-n.sort)).map((e=>e.value)).slice(0,n)))(await a.find({$and:[d,t]}),i)}},Mutation:{createUser:async(e,{data:n},{User:i})=>{let a=await i.findOne(n);return a?null:(n.liked=[],n.matched=[],n.rooms=[],a=new i(n),await a.save(),a)},deleteUser:async(e,{data:n},{User:i})=>{const a=await i.findOne(n);return a&&await i.deleteOne(n),a},addLikedUser:async(e,{data:{username:n,target:i}},{User:a})=>(await a.updateOne({username:n},{$addToSet:{liked:i}},(e=>{e&&console.error(e)})),a.findOne({username:n})),addMatchedUser:async(e,{data:{username:n,target:i}},{User:a})=>(await a.updateOne({username:n},{$addToSet:{matched:i}},(e=>{e&&console.error(e)})),a.findOne({username:n})),createUser:async(e,{data:n},{User:i})=>{let a=await i.findOne(n);return a?null:(a=new i(n),await a.save(),a)},deleteUser:async(e,{data:n},{User:i})=>{const a=await i.findOne(n);return a&&await i.deleteOne(n),a},createChatroom:async(e,{data:n},{User:i,Chatroom:a})=>{let t=new a(n),d=n.users[0],r=n.users[1],s=await i.findOne({username:d}),u=await i.findOne({username:r});return s&&u?s.rooms.get(r)&&u.rooms.get(d)?(t._id=s.rooms.get(r),t):(await t.save(),await s.rooms.set(r,t._id),await u.rooms.set(d,t._id),await s.save(),await u.save(),t):null},createMessage:async(e,{id:n,data:i},{Chatroom:a,pubsub:t})=>{let d=await a.findOne({_id:n});return d?(i.timestamp=Date.now(),await d.updateOne({$push:{messages:i}}),await d.save(),t.publish(`message about ${i.to}`,{message:{mutation:"CREATED",data:i}}),i):null}},Subscription:{message:{subscribe:(e,{username:n},{pubsub:i})=>i.asyncIterator(`message about ${n}`)}}};var N=i(279),c=i.n(N);const v=require("http");a().config(),process.env.MONGO_URL||(console.error("Missing MONGO_URL."),process.exit(1));const g=new t.PubSub;r().connect(process.env.MONGO_URL,{useNewUrlParser:!0,useUnifiedTopology:!0});const f=r().connection;f.on("error",(e=>console.error(e))),f.once("open",(()=>{console.log("MongoDB connected.");const n=new t.ApolloServer({typeDefs:c(),resolvers:y,context:{User:u,Message:e.Message,Chatroom:l,pubsub:g},playground:!1});let i=k()();n.applyMiddleware({app:i,path:"/"});const a=process.env.PORT||4e3,d=(0,v.createServer)(i);n.installSubscriptionHandlers(d),d.listen(a,(()=>console.log(`server running at port ${a}.`)))}))})()})();
